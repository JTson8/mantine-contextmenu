import { Code } from '@mantine/core';
import { PRODUCT_NAME } from '~/app/config';
import { CodeBlock } from '~/components/CodeBlock';
import { InternalLink } from '~/components/InternalLink';
import { PageNavigation } from '~/components/PageNavigation';
import { PageTitle } from '~/components/PageTitle';
import { Txt } from '~/components/Txt';
import { readCodeFile } from '~/lib/code';
import { getNextRoute, getRouteMetadata } from '~/lib/utils';
import { BasicUsageExample } from './BasicUsageExample';

const PATH = '/examples/basic-usage';

export const metadata = getRouteMetadata(PATH);

export default async function BasicUsageExamplePage() {
  const code = (await readCodeFile(`${PATH}/BasicUsageExample.tsx`)) as string;
  const { href: nextExampleHref } = getNextRoute(PATH);

  return (
    <>
      <PageTitle of={PATH} />
      <Txt>
        In its most basic usage scenario, the <Code>showContextMenu</Code> function only requires you to provide an
        array of objects describing the menu items.
        <br />
        Each object in the array must have two properties: a unique <Code>key</Code> and an <Code>onClick</Code>{' '}
        handler.
        <br />
        For each item, a title will be automatically generated by “humanizing” the <Code>key</Code> value.
        <br />
        The <Code>onClick</Code> handler will be called when the user clicks on the corresponding menu item.
      </Txt>
      <CodeBlock code={code} />
      <Txt>Right-click on the image to trigger the context menu:</Txt>
      <BasicUsageExample />
      <Txt>
        However, <InternalLink to={nextExampleHref}>there’s more</InternalLink> you can do with {PRODUCT_NAME}.
        <br />
        Head over to the next example to discover other features.
      </Txt>
      <PageNavigation of={PATH} />
    </>
  );
}
